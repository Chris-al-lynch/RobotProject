
# YAML file to build the multi-container Docker environment for
# the Robot Controller WebApp.
services:

  # We are not going to build a real robot at this time.  For now,
  # I will build a robot simulator to 
  simulator:
    image: robot/simulator
    build:
      context: .
      dockerfile: ./simulator/Dockerfile.simulator
      args:
        - NETWORK_ADDRESS=robot
        - NETWORK_PORT=6000
    ports:
      - "6666:6666"
    networks:
      - robot
  
  # This is the interface between the webapp and the robot.
  interface:
    image: robot/interface
    build:
      context: .
      dockerfile: ./interface/Dockerfile.interface
    ports: 
      - "5555:5555"
    networks:
      - mysql
      - robot
      - interface
  
  # Container for storing webapp data.  This will contain configuration
  # information which will be shared with the interface container.
  mysql:
    #image: mysql:latest
    image: robot/mysql
    build:
      context: .
      dockerfile: ./mysql/Dockerfile.mysql
      args:
        - MYSQL_DATABASE=configDB
        - MYSQL_USER=configUser
        - MYSQL_PASSWORD=configUserPassword1
        - MYSQL_ROOT_PASSWORD=rootPassword1
    ports:
      - "3306:3306"
    restart: always
    # Store the data in a docker volume described below.
    volumes:
      - "./mysql/dbSchema.sql:/docker-entrypoint-initdb.d/dbSchema.sql"
      - dbvolume:/virtual/data/mysql
    networks:
      - mysql
    
  # Container for running the webapp that interfaces with the
  # database and the robot interface software.
  webapp:
    image: robot/webapp
    build:
      context: .
      dockerfile: ./webapp/Dockerfile.webapp
    ports:
      - 3000:3000
    networks:
      - mysql

# Create a docker volume in a docker container.
volumes:
   dbvolume:
  
networks:
    mysql:
    robot:
    interface: